# Generated by Django 5.2.1 on 2025-05-27 02:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nombre')),
                ('brand', models.CharField(blank=True, max_length=100, verbose_name='Marca')),
                ('barcode', models.CharField(blank=True, max_length=50, verbose_name='Código de barras')),
                ('calories_per_100g', models.FloatField(verbose_name='Calorías por 100g')),
                ('protein_per_100g', models.FloatField(verbose_name='Proteínas por 100g (g)')),
                ('carbs_per_100g', models.FloatField(verbose_name='Carbohidratos por 100g (g)')),
                ('fat_per_100g', models.FloatField(verbose_name='Grasas por 100g (g)')),
                ('is_verified', models.BooleanField(default=False, help_text='Si la información nutricional ha sido verificada', verbose_name='Verificado')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
            ],
            options={
                'verbose_name': 'Alimento',
                'verbose_name_plural': 'Alimentos',
                'db_table': 'foods_food',
                'indexes': [models.Index(fields=['name'], name='foods_food_name_8eac09_idx'), models.Index(fields=['barcode'], name='foods_food_barcode_a0aca0_idx'), models.Index(fields=['created_at'], name='foods_food_created_1d7eaa_idx')],
            },
        ),
        migrations.CreateModel(
            name='ScannedFood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ai_identified_name', models.CharField(max_length=200, verbose_name='Nombre identificado por IA')),
                ('serving_size', models.CharField(blank=True, max_length=100, verbose_name='Tamaño de porción')),
                ('calories_per_serving', models.FloatField(blank=True, null=True, verbose_name='Calorías por porción')),
                ('protein_per_serving', models.FloatField(blank=True, null=True, verbose_name='Proteínas por porción (g)')),
                ('carbs_per_serving', models.FloatField(blank=True, null=True, verbose_name='Carbohidratos por porción (g)')),
                ('fat_per_serving', models.FloatField(blank=True, null=True, verbose_name='Grasas por porción (g)')),
                ('calories_per_100g', models.FloatField(blank=True, null=True, verbose_name='Calorías por 100g')),
                ('protein_per_100g', models.FloatField(blank=True, null=True, verbose_name='Proteínas por 100g (g)')),
                ('carbs_per_100g', models.FloatField(blank=True, null=True, verbose_name='Carbohidratos por 100g (g)')),
                ('fat_per_100g', models.FloatField(blank=True, null=True, verbose_name='Grasas por 100g (g)')),
                ('raw_ai_response', models.JSONField(blank=True, null=True, verbose_name='Respuesta cruda de IA')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Alimento Escaneado',
                'verbose_name_plural': 'Alimentos Escaneados',
                'db_table': 'foods_scanned',
                'indexes': [models.Index(fields=['user', 'created_at'], name='foods_scann_user_id_0cdb08_idx'), models.Index(fields=['ai_identified_name'], name='foods_scann_ai_iden_632bc1_idx')],
            },
        ),
    ]
