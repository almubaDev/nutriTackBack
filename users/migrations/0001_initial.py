# Generated by Django 5.2.1 on 2025-05-27 01:03

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(error_messages={'unique': 'Ya existe un usuario con este email.'}, max_length=254, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='Nombre')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='Apellido')),
                ('is_staff', models.BooleanField(default=False, help_text='Designa si el usuario puede acceder al admin.', verbose_name='Staff')),
                ('is_active', models.BooleanField(default=True, help_text='Designa si el usuario debe ser tratado como activo.', verbose_name='Activo')),
                ('is_email_verified', models.BooleanField(default=False, help_text='Designa si el email del usuario ha sido verificado.', verbose_name='Email verificado')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de registro')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'users_user',
                'indexes': [models.Index(fields=['email'], name='users_user_email_6f2530_idx'), models.Index(fields=['created_at'], name='users_user_created_cf865c_idx')],
            },
        ),
    ]
